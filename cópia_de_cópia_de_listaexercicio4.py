# -*- coding: utf-8 -*-
"""C√≥pia de C√≥pia de ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M9gx0Rywb_23OGFvjP9_6rb6FsllBcyj

# üìä Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico

Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.

1) Configure o t√≠tulo na barra do navegador, da p√°gina do projeto no Streamlit e descri√ß√£o inicial do projeto (peso: 1,0)

- T√≠tulo na barra (`page_title`): Lista de Exerc√≠cios 4
- T√≠tulo da p√°gina (`header`): Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico
- Descri√ß√£o projeto (`write`): Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

page_title = "Lista de Exerc√≠cios 4"
header = "Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico"
write = "Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit."

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

import pandas as pd
import streamlit as st

df = pd.read_csv("empresas_dados.csv", sep=";")


df.head(len(df))

"""3) Calcule os indicadores Margem L√≠quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo gr√°fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem L√≠quida = Lucro L√≠quido / Receita L√≠quida * 100
- ROA = Lucro L√≠quido / Ativo Total *  100
"""

margem_liquida = df["Lucro L√≠quido"] / df["Receita L√≠quida"] * 100
df["Margem L√≠quida"] = margem_liquida

roa = df["Lucro L√≠quido"] / df["Ativo Total"] * 100
df["ROA"] = roa

df_atualizada = df[["Empresa", "Ano", "Receita L√≠quida", "Lucro L√≠quido", "Ativo Total", "Setor", "UF", "Margem L√≠quida", "ROA"]]
df_atualizada

import matplotlib.pyplot as plt
df_margem_liquida = df_atualizada.groupby("Ano")["Margem L√≠quida"].mean()
df_roa = df_atualizada.groupby("Ano")["ROA"].mean()
plt.plot(df_margem_liquida, label="Margem L√≠quida")
plt.plot(df_roa, label="ROA")
plt.legend()
plt.xlabel("Ano")
plt.ylabel("Valor")
plt.title("Margem L√≠quida e ROA ao longo dos anos")
plt.show()

"""4) Utilize o pacote ipeadatapy e fa√ßa busca para encontrar o indicador que traga o IPCA, taxa de varia√ß√£o, em % e anual: (peso: 2,0)

- Baixe os dados no per√≠odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""



import ipeadatapy as ip

df1 = ip.timeseries("PRECOS_IPCAG")
df1 = df1.loc["2010":"2024"]
df1 = df1.rename(columns={"YEAR": "Ano", "VALUE ((% a.a.))": "IPCA"})

df1

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a fun√ß√£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conex√£o (chave prim√°ria) entre elas
- Crie nova coluna chamada Receita Real que ser√° o resultado da Receita L√≠quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta L√≠quida - ( Receita L√≠quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

df_combinada = pd.merge(df, df1, on="Ano")
df_combinada["Receita Real"] = df_combinada["Receita L√≠quida"] - (df_combinada["Receita L√≠quida"] * (df_combinada["IPCA"] / 100))
df_combinada

"""6) Crie gr√°fico de linha que apresente as vari√°veis Receita L√≠quida e Receita Real ao longo dos anos (no mesmo gr√°fico) (peso: 1,0)"""

import matplotlib.pyplot as plt

df_receita_liquida = df_combinada.groupby("Ano")["Receita L√≠quida"].mean()
df_receita_real = df_combinada.groupby("Ano")["Receita Real"].mean()

plt.plot(df_receita_liquida, label="Receita L√≠quida")
plt.plot(df_receita_real, label="Receita Real")
plt.xlabel("Ano")
plt.ylabel("Valor (m√©dio)")
plt.title("Receita L√≠quida e Receita Real ao longo dos anos")
plt.legend()
plt.tight_layout()
plt.show()

"""7) Fa√ßa os ajustes necess√°rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- Ca√ßa os ajustes necess√°rios no projeto para ser publicado no Streamlit
- Crie novo reposit√≥rio p√∫blico no GitHub e leve os arquivos .py e .csv pra l√°. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao reposit√≥rio da lista
"""
